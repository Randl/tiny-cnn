sudo: required
dist: trusty

language: cpp

os:
  - linux
  - osx

compiler:
  - gcc
  - clang

cache:
  pip: true
  directories:
    - $HOME/.pip-cache/

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
      - george-edison55-cmake-3.x
    packages:
      - gcc-4.8
      - g++-4.8
      - clang
      - cmake
      - git
      # Optional dependencies
      - libtbb-dev
      # coveralls dependencies
      - gem
      - lcov
      #libdnn
      - libviennacl-dev 

branches:
  only:
    - master
    - travis_opencl
env:
  global:
    - USE_TBB=ON
    - BUILD_TESTS=ON
    - BUILD_EXAMPLES=ON
    - COVERALLS=ON
 
  matrix:
    - USE_SSE=OFF USE_AVX=OFF USE_LIBDNN=OFF USE_OPENCL=OFF
    - USE_SSE=ON  USE_AVX=ON USE_LIBDNN=OFF USE_OPENCL=OFF
    - USE_SSE=ON  USE_AVX=ON USE_LIBDNN=ON USE_OPENCL=ON

matrix:
  exclude: # On OSX g++ is a symlink to clang++ by default 
    - os: osx
      compiler: gcc

before_install:
  - if [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$CXX" == "g++" ]; then
       export CC="gcc-4.8";
       export CXX="g++-4.8";
    fi
  - if [ $TRAVIS_OS_NAME = "linux" ] && [ "$USE_OPENCL" == "ON" ]; then
      bash .travis/amd_sdk.sh;
      tar -xjf AMD-SDK.tar.bz2;
      AMDAPPSDK=${HOME}/AMDAPPSDK;
      export OPENCL_VENDOR_PATH=${AMDAPPSDK}/etc/OpenCL/vendors;
      mkdir -p ${OPENCL_VENDOR_PATH};
      sh AMD-APP-SDK*.sh --tar -xf -C ${AMDAPPSDK};
      echo libamdocl64.so > ${OPENCL_VENDOR_PATH}/amdocl64.icd;
      export LD_LIBRARY_PATH=${AMDAPPSDK}/lib/x86_64:${LD_LIBRARY_PATH};
      chmod +x ${AMDAPPSDK}/bin/x86_64/clinfo;
      ${AMDAPPSDK}/bin/x86_64/clinfo;
    fi;
  - gcc --version
  - g++ --version

install:
  - bash -x .travis/install.sh
  - gem install coveralls-lcov

before_script:
  -  wget -O libdnn.tar.gz https://github.com/naibaf7/libdnn/archive/master.tar.gz
  - tar -xzvf libdnn.tar.gz
  - pushd libdnn-master && mkdir build && cd build && cmake -DUSE_CUDA=OFF .. && make && sudo make install && popd
  - if [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$CXX" == "g++-4.8" ]; then
      lcov --directory . --zerocounters;
      cmake -DUSE_TBB=$USE_TBB
            -DUSE_SSE=$USE_SSE
            -DUSE_AVX=$USE_AVX
            -DUSE_LIBDNN=$USE_LIBDNN
            -DUSE_OPENCL=$USE_OPENCL
            -DBUILD_TESTS=$BUILD_TESTS
            -DCOVERALLS=$COVERALLS
            -DBUILD_EXAMPLES=$BUILD_EXAMPLES .;
    fi
  - if [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$CXX" == "clang++" ]; then
      cmake -DUSE_SSE=$USE_SSE
            -DUSE_AVX=$USE_AVX
            -DUSE_LIBDNN=$USE_LIBDNN
            -DUSE_OPENCL=$USE_OPENCL
            -DBUILD_TESTS=$BUILD_TESTS
            -DBUILD_EXAMPLES=$BUILD_EXAMPLES .;
    fi
  - if [ "$TRAVIS_OS_NAME" == "osx" ]; then
      cmake -DUSE_TBB=$USE_TBB
            -DUSE_AVX=OFF
            -DBUILD_TESTS=$BUILD_TESTS .;
    fi
  
script: make -j2 && ./test/tiny_dnn_test

after_success:
  - if [ "$TRAVIS_OS_NAME" == "linux" ] && [ "$CXX" == "g++-4.8" ]; then
      lcov --directory . --capture --output-file coverage.info;
      lcov --remove coverage.info 'test/*' 'third_party/*' 'cereal/*' '/usr/*' --output-file coverage.info;
      lcov --list coverage.info;
      coveralls-lcov --source-encoding=ISO-8859-1 coverage.info;
    fi
